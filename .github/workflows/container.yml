name: Build and publish a Docker image

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
        description: 'clams-python SDK version'
      buildfilename:
        required: true
        type: string
        description: 'name of the container file to use'

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: get existing labels
      id: getlabels
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "EXISTING_LABELS<<$EOF" >> $GITHUB_ENV
        cat ${{ inputs.buildfilename }} | grep LABEL | sed -E 's/^LABEL\s+([^=]+)="?(.+)("|$)/\1=\2/g' >> $GITHUB_ENV
        echo "$EOF" >> $GITHUB_ENV
        echo $EXISTING_LABELS

    - name: get image build context
      id: getcontext
      run: |
        echo "CONTEXT=$(dirname ${{ inputs.buildfilename }})" >> $GITHUB_ENV

    - name: get image name suffix
      id: getsuffix
      run: |
        export filename=$(basename ${{ inputs.buildfilename }})
        export nameonly="${filename%.*}"
        if [ ${nameonly} == ${filename} ]; then echo "SUFFIX=" >> $GITHUB_ENV ; else echo "SUFFIX=-${nameonly}" >> $GITHUB_ENV; fi

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ github.repository }}${{ env.SUFFIX }}
        tags: |
          type=pep440,pattern={{version}},value=${{ inputs.version }}
          type=ref,event=tag
          type=ref,event=pr
        labels: |
          ${{ env.EXISTING_LABELS }}

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ${{ env.CONTEXT }}
        file: ${{ inputs.buildfilename }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ env.DOCKER_METADATA_OUTPUT_LABELS }}
